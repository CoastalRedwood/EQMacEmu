#include <iostream>
#include <string>
#include <sstream>
#include <unordered_map>
#include <cctype>
#include <algorithm>

#include "../client.h"

void command_permastats(Client* c, const Seperator* sep) {

	Client* t = c;
	if (c->GetTarget() && c->GetTarget()->IsClient()) {
		t = c->GetTarget()->CastToClient();
	}

	// Convert the input string to uppercase
	std::string input = sep->msg;
	std::transform(input.begin(), input.end(), input.begin(), ::toupper);

	// Initialize attributes with default value of 0
	std::unordered_map<std::string, uint16> attributes = {
		{"STR", 0}, {"STA", 0}, {"DEX", 0}, {"AGI", 0},
		{"INT", 0}, {"WIS", 0}, {"CHA", 0}
	};

	// Use a stringstream to parse the input
	bool token_found = false;
	std::istringstream iss(input);
	std::string token;
	int value;

	while (iss >> token) {
		// Check if the token is a number
		if (std::isdigit(token[0])) {
			value = std::stoi(token);

			// Get the next token for the attribute name
			if (iss >> token) {
				// Check if the attribute exists in the map
				if (attributes.find(token) != attributes.end()) {
					if (value < 0 || value > 25) { // Validate the value range
						c->Message(Chat::Red, "Attributes must between 0 and 25: '%i %s' is invalid.", value, token.c_str());
						return;
					}
					attributes[token] = value;
					token_found = true;
				}
			}
		}
	}

	if (token_found) {
		if (t->PermaStats(c, attributes["STR"], attributes["STA"], attributes["AGI"], attributes["DEX"], attributes["WIS"], attributes["INT"], attributes["CHA"], false)) {
			t->Save();
			c->Message(Chat::White, "Successfully set %s's stats - zone to take effect", t->GetName());
			Log(Logs::General, Logs::Normal, "Permanant stats change request from %s for %s, stats command: %s", c->GetName(), t->GetName(), sep->msg);
		}
		// Note: Error messages will be generated by PermaStats()
	}
	else {
		c->Message(Chat::White, "Usage: '#permastats <stats>'. Example: '#permastats 10 str 20 sta");
	}
}